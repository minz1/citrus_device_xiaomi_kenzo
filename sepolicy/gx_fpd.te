type gx_fpd, domain;
type gx_fpd_device, dev_type;
type gx_fpd_lib_file, file_type, data_file_type;
type gx_fp_lib_file, file_type, data_file_type;
type gx_fpd_data_file, file_type, data_file_type;
type gx_fpd_service, app_api_service, system_server_service, service_manager_type;
type gx_fpd_exec, exec_type, file_type;

allow appdomain gx_fpd_lib_file:file rw_file_perms;
allow appdomain gx_fp_lib_file:file rw_file_perms;
allow appdomain gx_fpd_data_file:file rw_file_perms;

allow binderservicedomain gx_fpd_data_file:file { create open getattr write };
allow binderservicedomain fingerprintd_data_file:file { create open getattr write };

set_prop(gx_fpd, system_prop)
set_prop(gx_fpd, config_prop)

init_daemon_domain(gx_fpd)
binder_use(gx_fpd)
binder_call(gx_fpd, binderservicedomain)
binder_call(gx_fpd, appdomain)
binder_call(gx_fpd, system_server);
binder_service(gx_fpd)

use_keystore(gx_fpd)
allow gx_fpd_exec keystore:keystore_key { add_auth };

allow gx_fpd gx_fpd_device:chr_file { ioctl read write open };
allow gx_fpd gx_fpd_service:service_manager add;
allow gx_fpd ion_device:chr_file { read ioctl open };
allow gx_fpd self:capability dac_override;
allow gx_fpd shell_exec:file rx_file_perms;
allow gx_fpd system_file:file execute_no_trans;
allow gx_fpd tee_device:chr_file { ioctl read write open };

allow tee gx_fpd_data_file:dir { add_name open read remove_name write search };
allow tee gx_fpd_data_file:file { create open read unlink write };
